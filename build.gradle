buildscript {
    ext {
        kotlin_version = '1.3.50' // Required for Kotlin integration
        spring_boot_version = '2.1.0.RELEASE'
        mockitoVersion = '3.0.0'
        junitVersion = '5.3.1'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-jpa"

jar {
    baseName = 'brn-service'
    version = '0.1.0'
}

repositories {
    jcenter()
}

configurations {
    ktlint
}
ext['mockito.vershion'] = "${mockitoVersion}"
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
    compile "org.springframework.boot:spring-boot-starter-web"
//    compile "org.springframework.boot:spring-boot-starter"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "com.h2database:h2:1.4.199"
    testCompile('org.springframework.boot:spring-boot-starter-test')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testCompile("org.mockito:mockito-junit-jupiter:${mockitoVersion}")

    compile 'org.apache.logging.log4j:log4j-api-kotlin:1.0.0'
    compile 'org.apache.logging.log4j:log4j-api:2.11.2'
    compile 'org.apache.logging.log4j:log4j-core:2.11.2'

    ktlint "com.github.shyiko:ktlint:0.31.0"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

def outputDir = "${project.buildDir}/reports/ktlint/"
def outputFile = "${outputDir}ktlint-checkstyle-report.xml"
project.task("ktlint", type: JavaExec) {
    group = "verification"
    description = "Runs ktlint."
    main = "com.github.shyiko.ktlint.Main"
    classpath = project.configurations.ktlint
    args = [
            "--reporter=plain",
            "--reporter=checkstyle,output=${outputFile}",
            "src/**/*.kt"
    ]
}
compileKotlin.dependsOn ktlint